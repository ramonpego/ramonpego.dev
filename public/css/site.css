@charset "UTF-8";

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  border: 0;
  box-sizing: border-box;
  outline: none !important;
  text-decoration: none !important;
}

@font-face {
  font-family: JetBrainsMono-ExtraBold;
  src: url(/fonts/JetBrainsMono-ExtraBold.woff?bd0cd45ba80883a87d122a5b23f92a18) format("woff"), url(/fonts/JetBrainsMono-ExtraBold.woff?bd0cd45ba80883a87d122a5b23f92a18) format("woff2");
  font-style: normal;
  font-variant: normal;
  font-stretch: normal;
  font-weight: 800;
}

@font-face {
  font-family: JetBrainsMono-Bold;
  src: url(/fonts/JetBrainsMono-Bold.woff?896f23850b33cd1df94eb955d4b60079) format("woff"), url(/fonts/JetBrainsMono-Bold.woff2?a492f7427b1561cc96ace88f5756d94e) format("woff2");
  font-style: normal;
  font-variant: normal;
  font-stretch: normal;
  font-weight: 700;
}

@font-face {
  font-family: JetBrainsMono-Regular;
  src: url(/fonts/JetBrainsMono-Regular.woff?2fe9a2bdaa6daf61e770a2edb7252040) format("woff"), url(/fonts/JetBrainsMono-Regular.woff2?21ba2c11275a07ccf3890fbeab585525) format("woff2");
  font-style: normal;
  font-variant: normal;
  font-stretch: normal;
  font-weight: 400;
}

/* | DISPLAY |
    -> Torna o elemento um flex container automaticamente transformando todos os seus filhos diretos em flex itens.
*/

/* | FEX DIRECTION |
    -> Define a direção dos flex itens.
    -> Por padrão ele é row (linha), por isso quando o display: flex; é adicionado, os elementos ficam em linha, um do lado do outro.
*/

/* | FLEX WRAP |
    -> Define se os itens devem quebrar ou não a linha. Por padrão eles não quebram linha.
*/

/* | FLEX FLOW |
    -> O flex-flow é um atalho para as propriedades flex-direction e flex-wrap.
*/

/* | JUSTIFY CONTENT |
    -> Alinha os itens flex no container de acordo com a direção.
    -> A propriedade só funciona se os itens atuais não ocuparem todo o container.
    -> Isso significa que ao definir flex: 1; ou algo similar nos itens, a propriedade não terá mais função.
*/

/* | ALIGN ITEMS |
    -> O align-items alinha os flex itens de acordo com o eixo do container.
    -> O alinhamento é diferente para quando os itens estão em colunas ou linhas.
*/

/* | ALIGN CONTENT |
    -> Alinha as linhas do container em relação ao eixo vertical.
    -> A propriedade só funciona se existir mais de uma linha de flex-itens. Para isso o flex-wrap precisa ser wrap.
*/

/* | ALIGN SELF |
    -> O align-self serve para definirmos o alinhamento específico de um único flex item dentro do nosso container.
    -> Caso um valor seja atribuído, ele passara por cima do que for atribuído no align-items do container.
*/

/* | FLEX GROW |
    -> Define a habilidade de um flex item crescer.
    -> Por padrão o valor é zero, assim os flex itens ocupam um tamanho máximo relacionado o conteúdo interno deles ou ao width definido.
*/

/* | FLEX BASIS |
    -> Indica o tamanho inicial do flex item antes da distribuição do espaço restante.
*/

/* | FLEX SHRINK |
    -> Valor padrão, permite que os itens tenham os seus tamanhos (seja esse tamanho definido a partir de width ou flex-basis) reduzidos para caber no container.
    -> Não permite a diminuição dos itens, assim um item com flex-basis: 18.75rem; nunca diminuirá menos do que 18.75rem, mesmo que o conteúdo não ocupe todo esse espaço.
    -> Um item com shrink: 3 diminuirá 3 vezes mais que um item com 1.
*/

/* | FLEX |
    -> Atalho para as propriedades flex-grow, flex-shrink e flex-basis.
    -> Geralmente você verá a propriedade flex nos flex itens ao invés de cada um dos valores separados.
*/

/* | ORDER |
    -> Modifica a ordem dos flex itens.
    -> Sempre do menor para o maior, assim order: 1, aparece na frente de order: 5.
*/

/* | GRID TEMPLATE |
    -> Escreve linhas e column ao mesmo tempo.
    -> grid-template: auto 1fr auto / auto 1fr auto;
    -> A "/" separa as linhas das colunas
*/

/* | GRID TEMPLATE column |
    -> Exemplo: grid-template-columns: repeat(12, 1fr);
    -> Indica que o grid vai ter 12 colunas, e todas com o mesmo tamanho(1fr)
    -> Evita de repetir o "1fr" 12 vezes para indiciar que existem 12 colunas
    -> Exemplo: grid-template-columns: repeat(auto-fit, minmax(9.375rem, 1fr);
    -> auto-fit (conforme a tela aumenta, os itens aumentam para ocupar todo o espaço)
    -> o 1fr da função minmax faz com que os itens possuam o mesmo tamanho.
    -> o 9.375rem da função minmax faz com que os itens tenham no minimo 9.375rem quando a tela diminui.
*/

/* | GRID column |
    -> Especifica o tamanho e a localização do item.
    -> grid-collum: 1 / 13; indica que o item inicia na coluna 1 e tem tamanho que vai até a coluna 13
    -> Ainda to confuso com essa, pois o exemplo acima significa que o item tem tamanho de 12 colunas.
*/

/* | PACE ITEMS |
    -> Propriedade abreviada para align-itemns & justify-itemns
    -> Se o segundo valor não for informado, o primeiro é utilizado para os dois.
*/

/* width: clamp(min, actual, max)
    -> Define um tamanho minimo, atual e o máximo para um elemento.
    -> também funciona para font.
    -> Não funciona no navegador Safari ainda.
*/

/* aspect-ratio: width / heihgt;
    -> Para Imagens e Videos.
    -> Exemplo: apect-ratio: 16 / 9
    -> O video ou a imagem sempre vai manter essa proporção de tamanho independente da tela aumentar ou diminuir.
    -> Não funciona em nenhum navegador estável ainda.
*/

::-webkit-scrollbar {
  width: 0.938rem;
}

::-webkit-scrollbar-track {
  background-color: transparent !important;
}

::-webkit-scrollbar-thumb {
  background-color: #EAECEF;
}

.title {
  font-family: JetBrainsMono-ExtraBold;
  letter-spacing: 0.144rem;
  text-transform: uppercase;
  color: #24292E;
  margin-bottom: 0;
}

.subtitle {
  font-family: JetBrainsMono-Bold;
  letter-spacing: 0.119rem;
  color: #24292E;
  margin-bottom: 0;
}

.text {
  font-family: JetBrainsMono-Regular;
  font-size: 0.938rem;
  letter-spacing: 0.094rem;
  color: #24292E;
  margin-bottom: 0;
}

.text_small {
  font-family: JetBrainsMono-Regular;
  font-weight: 300;
  font-size: 0.813rem;
  letter-spacing: 0.094rem;
  color: #24292E;
  margin-bottom: 0;
}

.pointer {
  font-weight: 900;
  font-size: 3.125rem;
  color: #FF4655;
}

.sobtitle {
  font-family: JetBrainsMono-ExtraBold;
  font-size: 1.25rem;
  letter-spacing: 0.313rem;
  text-transform: uppercase;
  color: #FF4655;
  margin-bottom: 0;
}

.divider__ {
  width: 5rem;
  height: 0.313rem;
  background-color: #FF4655;
  margin: 0.313rem auto 0.313rem auto;
}

.div__title {
  text-align: center;
}

.div__title .title {
  font-size: 3.75rem;
  text-transform: initial;
  margin-top: 3.125rem;
  margin-bottom: 2.5rem;
  line-height: 1.2;
}

.div__title .subtitle {
  color: #6A737D;
  line-height: 2;
  margin-bottom: 1.875rem;
}

.action__icon {
  z-index: 3;
  position: absolute;
  top: 100px;
  right: 0;
  cursor: pointer;
  width: 2.813rem;
  height: 2.813rem;
  border: 0.063rem solid #EAECEF;
  border-radius: 0.625rem;
  background-color: #FFFFFF;
  box-shadow: 0 1.25rem 1.25rem -0.625rem rgba(0, 0, 0, 0.2);
  display: flex;
  align-items: center;
  justify-content: center;
}

.action__icon::before {
  content: "";
  position: absolute;
  width: 1.125rem;
  height: 1.125rem;
  background-image: url(/images/arrow.svg?e56d764b46fba446f076411140e9dd0c);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: scroll;
  background-origin: border-box;
  background-clip: border-box;
}

.action__icon.aciton__top {
  transform: rotate(180deg);
}

.action__icon.aciton__right {
  transform: rotate(270deg);
}

.action__icon.aciton__left {
  transform: rotate(90deg);
}

.button__solid {
  cursor: pointer;
  min-width: 9.375rem;
  height: auto;
  padding: 0.625rem 1.25rem;
  margin: 0.313rem;
  border: none;
  border-radius: 0.5rem;
  background-color: #24292E;
  outline: none;
  display: inline-block;
  text-decoration: none;
  text-align: center;
  color: #FFFFFF;
}

.button__solid:hover {
  color: #FFFFFF;
  background-color: #FF4655;
  box-shadow: rgba(255, 63, 82, 0.5) 0rem 0.063rem 2.5rem;
}

.social__ {
  width: 100%;
  display: flex;
  justify-content: flex-end;
}

.social__ .social__nav .social__item {
  margin: 0 0.313rem;
}

.social__ .social__nav .social__item .social__link {
  width: 2.188rem;
  height: 2.188rem;
  padding: 0.313rem;
  border-radius: 50%;
  background-color: #24292E;
  display: flex;
  align-items: center;
  justify-content: center;
}

.social__ .social__nav .social__item .social__link .social__icon {
  width: 0.938rem;
  height: auto;
}

.social__ .social__nav .social__item .social__link:hover {
  background-color: #FF4655;
}

.list__ {
  list-style: none;
}

.list__ .list__item {
  margin-bottom: 0.938rem;
  display: flex;
}

.list__ .list__item img {
  width: 1.563rem;
  height: 1.563rem;
  margin-right: 0.625rem;
}

.div_form {
  width: 100%;
  height: auto;
  display: flex;
  justify-content: center;
  flex-direction: column;
}

.div_form .section_row {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
}

.div_form form {
  width: 100%;
}

.div_form form fieldset {
  width: 100%;
}

.form_item {
  flex: 1;
  margin: 0.625rem;
}

.form_item.item_center {
  display: flex;
  justify-content: center;
}

.form_item.right {
  display: flex;
  justify-content: flex-end;
}

label {
  font-family: JetBrainsMono-Regular;
  font-weight: 600;
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.125rem;
  color: #24292E;
}

.form-text {
  font-size: 0.875rem;
  color: #FF4655;
}

.form-control {
  width: 100%;
  height: 3.125rem;
  padding: 0.625rem;
  margin-top: 0.938rem;
  border-radius: 0.44rem;
  border: 0.063rem solid #EAECEF;
  background-color: transparent;
  font-family: JetBrainsMono-Regular;
}

textarea.form-control {
  height: 9.375rem;
  resize: none;
}

.article__ {
  cursor: pointer;
  width: 100%;
  height: auto;
  margin: 1.875rem 0;
  border: 0.063rem solid #EAECEF;
  border-radius: 0.44rem;
  background-color: #FFFFFF;
}

.article__:hover {
  box-shadow: 0 0.375rem 0.625rem rgba(0, 0, 0, 0.08);
}

.article__ .post__ {
  position: relative;
  padding: 3.125rem;
}

.article__ .post__ .post__category {
  position: absolute;
  top: -20px;
  left: 50px;
  width: 7.5rem;
  height: 2.5rem;
  background-color: #FF4655;
  color: #24292E;
  display: flex;
  align-items: center;
  justify-content: center;
}

.article__ .post__ .post__info {
  position: absolute;
  top: 0;
  right: 0;
  border: 0.063rem solid #EAECEF;
  padding: 0.938rem;
}

.article__ .post__ .post__info .text_small {
  color: #6A737D;
}

.article__ .post__ .post__header {
  padding: 1.25rem;
  margin-bottom: 3.125rem;
}

.article__ .post__ .post__header .title {
  margin-bottom: 1.25rem;
}

.article__ .post__ .post__content {
  margin-bottom: 3.125rem;
  padding: 2.5rem 1.25rem;
  background-color: #F5F6F7;
}

.article__ .post__ .post__content .subtitle {
  margin-bottom: 1.25rem;
}

.article__ .post__ .post__content .text {
  margin: 0.938rem 0;
}

.article__ .post__ .post__action {
  position: absolute;
  bottom: 0;
  right: 0;
  height: 3.75rem;
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.article__ .post__ .post__action.button__solid {
  border-radius: 0;
  border-bottom-right-radius: 0.44rem;
}

.body__ {
  width: 100%;
  height: 100%;
  background-color: #FFFFFF;
  overflow: hidden;
  font-family: JetBrainsMono-Regular;
  color: #24292E;
}

.content__ {
  width: 100%;
  height: calc(100vh - 60px);
  overflow: hidden;
  display: flex;
}

.aside__ {
  position: relative;
  width: 350px;
  overflow: hidden;
}

.aside__:hover {
  box-shadow: 0 0 0.75rem 0 rgba(0, 0, 0, 0.1);
}

.aside__ .aside__content {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: auto;
  border-right: 0.063rem solid #EAECEF;
}

.aside__ .aside__content .action__icon {
  z-index: 3;
  position: absolute;
  top: 100px;
  right: 0;
}

.aside__ .aside__content .aside__header {
  position: relative;
  width: 100%;
  height: 12.5rem;
  padding: 0.938rem;
  background-color: #F5F6F7;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.aside__ .aside__content .aside__header .aside__img {
  position: absolute;
  bottom: -125px;
  width: 15.625rem;
  height: 15.625rem;
  border: 0.44rem solid #F5F6F7;
  border-radius: 100%;
  background-color: #F5F6F7;
}

.aside__ .aside__content .aside__header .aside__img .img__ {
  cursor: pointer;
  width: 100%;
  height: 100%;
  border-radius: 50%;
}

.aside__ .aside__content .aside__body {
  padding: 8.125rem 1.875rem 1.875rem 1.875rem;
}

.aside__ .aside__content .aside__body .aside__infos .title {
  margin-bottom: 1.25rem;
  font-size: 1.563rem;
  letter-spacing: normal;
  text-align: center;
}

.aside__ .aside__content .aside__body .aside__infos .text,
.aside__ .aside__content .aside__body .aside__infos .text_small {
  margin-top: 1.563rem;
}

@media (max-width: 900px) {
  .aside__ {
    width: 0;
  }
}

.main__ {
  width: calc(100% - 350px);
  height: inherit;
  padding: 0 2.5rem;
  overflow: hidden;
}

@media (max-width: 900px) {
  .main__ {
    width: 100%;
    padding: 0;
  }
}

.navbar__ {
  width: 100%;
  height: 70px;
  padding: 0;
  border-bottom: 0.063rem solid #EAECEF;
}

.navbar__ .navbar__menu {
  height: 70px;
}

.navbar__ .navbar__menu .navbar__item {
  height: inherit;
}

.navbar__ .navbar__menu .navbar__item .navbar__link {
  cursor: pointer;
  height: inherit;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  border-bottom: 0.063rem solid transparent;
  color: #24292E;
  display: flex;
  align-items: center;
  justify-content: center;
}

.navbar__ .navbar__menu .navbar__item .navbar__link:hover,
.navbar__ .navbar__menu .navbar__item .navbar__link.active {
  border-bottom: 0.063rem solid #FF4655;
}

.navbar__ .navbar__menu .navbar__item .navbar__link.sidebar__action .line__icon {
  position: relative;
  width: 1.875rem;
  height: 0.125rem;
  border: none;
  border-radius: 0.44rem;
  background-color: #24292E;
}

.navbar__ .navbar__menu .navbar__item .navbar__link.sidebar__action .line__icon::before,
.navbar__ .navbar__menu .navbar__item .navbar__link.sidebar__action .line__icon::after {
  position: absolute;
  content: "";
  width: 1.875rem;
  height: 0.125rem;
  border: none;
  border-radius: 0.44rem;
  background-color: #24292E;
}

.navbar__ .navbar__menu .navbar__item .navbar__link.sidebar__action .line__icon::before {
  margin-top: -0.625rem;
}

.navbar__ .navbar__menu .navbar__item .navbar__link.sidebar__action .line__icon::after {
  margin-top: 0.625rem;
}

@media (max-width: 900px) {
  .navbar__ {
    padding: 0 2rem;
  }
}

.section__ {
  width: 100%;
  height: calc(100vh - 70px - 91px);
  padding-top: 1.875rem;
  overflow: auto;
}

.section__ .div__wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (max-width: 500px) {
  .section__ {
    height: calc(100vh - 70px - 100px);
  }
}

.footer__ {
  width: 100%;
  height: 60px;
  border-top: 0.063rem solid #EAECEF;
}

.footer__ .footer__content {
  width: 100%;
  height: 100%;
  padding: 0 3.125rem;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
}

.footer__ .footer__content .social__,
.footer__ .footer__content .copy__ {
  flex: 1;
}

@media (max-width: 500px) {
  .footer__ {
    height: 100px;
  }

  .footer__ .footer__content {
    padding: 0rem 0.625rem;
    flex-direction: column;
    justify-content: center;
  }

  .footer__ .footer__content .copy__ {
    text-align: center;
  }

  .footer__ .footer__content .social__ {
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

